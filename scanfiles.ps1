    <# Add task #>
    [CmdletBinding()] # Advanced function
    param (
        # Specifies a path to one or more locations.
        [Parameter(Mandatory=$false, 
                   Position=0, # If parameter name is not used (ex. -Path), then must use pos 0
                   ParameterSetName="Path", # Parameter name to use when calling script (./script.ps1 -Path "C:..")
                   ValueFromPipeline=$true, 
                   ValueFromPipelineByPropertyName=$true, 
                   HelpMessage="Path to one or more locations.")]
        [Alias("PSPath")]
        [ValidateNotNullOrEmpty()] # Parameter cannot be null or empty string
        [string[]]
        $toplevel = ".", # path is current dir by default
        [switch] $Force = $false
        )

    Begin{

        # The name of your scheduled task.
        $taskName = "Log4j JndiLookupClass Scanner"

        # Describe the scheduled task.
        $description = "Scans system for log4j vulnerabilities"


        # # Unregister the scheduled task
        if (Get-ScheduledTaskInfo -TaskName $taskName)
        {
            Unregister-ScheduledTask -TaskName $taskName -Confirm:$false
        }

        $force_prompt = ""
        $verbose_prompt = ""
        if($Force)
        {
            $force_prompt = "-Force"
        }
        if($VerbosePreference -eq 'Continue')
        {
            $verbose_prompt = "-Verbose"
        }

        # Creating scheduled task action   #### Replace with correct top level directory  # -Force:$Force -Verbose:$VerbosePreference -Path:$toplevel" 
        $taskAction = New-ScheduledTaskAction `
        -Execute 'powershell.exe' `
        -Argument "-NoProfile -ExecutionPolicy Bypass -File $(Get-Location)\checkjndi.ps1 $force_prompt $verbose_prompt $toplevel" `
        -WorkingDirectory (Get-Location)
        $taskAction


        # Create a new trigger (Once at 2:40 Am)
        $taskTrigger = New-ScheduledTaskTrigger -Once -At 3AM
        $tasktrigger

        ##### Register the new PowerShell scheduled task


        # Register the scheduled task
        Register-ScheduledTask `
            -TaskName $taskName `
            -Action $taskAction `
            -Trigger $taskTrigger `
            -Description $description


        # Confirm it exists now
        # Get-ScheduledTaskInfo -TaskName $taskName

        # Set the task principal's user ID and run level.
        $taskPrincipal = New-ScheduledTaskPrincipal -UserId ([System.Security.Principal.WindowsIdentity]::GetCurrent().Name) -RunLevel Highest
        # # Set the task compatibility value to Windows 10.
        # $taskSettings = New-ScheduledTaskSettingsSet -Compatibility Win8
        # Update the task principal settings
        Set-ScheduledTask -TaskName $taskName -Principal $taskPrincipal

    }

    Process {
        # Run the task
        Start-ScheduledTask -TaskName $taskName
    }

    End {
        # Unregister the scheduled task
        # Unregister-ScheduledTask -TaskName $taskName -Confirm:$false
    }

    <# End new adding of task#>



    ## 70 or so files thare are still giving permission errors
    ## 10 or so files that say data exception 